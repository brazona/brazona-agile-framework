# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
    - targets: ['127.0.0.1:9090']

  - job_name: 'Health Check CONFIG SERVER'
    metrics_path: '/actuator/prometheus'
    #scrape_interval: 5s
    basic_auth:
      username: 'baf_ITHBJ'
      password: 'mk0s1GGEdR'
    static_configs:
    - targets: [ 'host.docker.internal:8888' ]

  - job_name: 'Health Check EUREKA SERVER'
    metrics_path: '/actuator/prometheus'
    #scrape_interval: 5s
    static_configs:
    - targets: [ 'host.docker.internal:8761' ]

  - job_name: 'Health Check API GATEWAY'
    metrics_path: '/api/actuator/prometheus'
    #scrape_interval: 5s
    static_configs:
    - targets: ['host.docker.internal:8080']

  - job_name: 'Health Check AUTHENTICATION'
    metrics_path: '/api/authentication/actuator/prometheus'
    #scrape_interval: 5s
    basic_auth:
      username: 'DEVELOP_WUhS4Z7brQ'
      password: 'KM849FSR3I9FNC9OTBSR'

    static_configs:
      - targets: [ 'host.docker.internal:8080' ]

  - job_name: 'Health Check USERS'
    metrics_path: '/api/users/actuator/prometheus'
    #scrape_interval: 5s
    static_configs:
      - targets: [ 'host.docker.internal:8080' ]